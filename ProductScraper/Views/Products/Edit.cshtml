@model ProductScraper.Models.EntityModels.ProductInfo

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>@Html.DisplayFor(model => model.Name)</h4>
<hr />
<div class="row">
    @if (ViewBag.Exception != null)
    {
        <div class="col-md-12 text-danger">
            <h5>@ViewBag.Exception</h5>
        </div>
    }
    <div class="col-md-12">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="URL" class="control-label"></label>
                <input asp-for="URL" class="form-control" />
                <span asp-validation-for="URL" class="text-danger"></span>
            </div>
            <div class="row">
                <div class="col-md-2">
                    @Html.DisplayNameFor(model => model.Price)
                </div>
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Price)
                </div>
                <div class="col-sm-2">
                    @Html.DisplayNameFor(model => model.SecondPrice)
                </div>
                <div class="col-sm-10">
                    @Html.DisplayFor(model => model.SecondPrice)
                </div>
                <div class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Availability)
                </div>
                <div class="col-sm-10">
                    @if (Model.Availability.HasValue)
                    {
                        if (Model.Availability.Value)
                        {
                            <i class="fas fa-check text-success"></i>
                        }
                        else
                        {
                            <i class="fas fa-times text-danger"></i>
                        }
                    }
                </div>
                <div class="col-sm-2">
                    @Html.DisplayNameFor(model => model.LastCheckedOn)
                </div>
                <div class="col-sm-10">
                    @Html.DisplayFor(model => model.LastCheckedOn)
                </div>
                <dt class="col-sm-2">
                    Changed
                </dt>
                <dd class="col-sm-10">
                    @if (Model.HasChangesSinceLastTime)
                    {
                        <i class="fas fa-check text-success"></i>
                    }
                    else
                    {
                        <i class="fas fa-times text-danger"></i>
                    }

                </dd>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
